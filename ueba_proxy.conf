input {
	file {
		path => "/opt/ueba/test/*"
		start_position => "beginning"
		sincedb_path => "/dev/null"
		tags => ["getproxy"]
		type => ["proxy"]
  	}
}

filter {
if "getproxy" in [tags] {
### First two grok filters, filter out logs with Users present in the log source
	grok {
		patterns_dir => ["/etc/logstash/patterns"]
		match => { "message" => "%{SYSLOGTIMESTAMP:timestamp} %{IP:srcip} %{PROXYBASE:base} %{OUBASE:oubase} %{GREEDYDATA:msg}" }
		add_tag => [ "User_Present" ]
		remove_tag => ["getproxy"]
		tag_on_failure => [ "unparsed" ]
	}
	grok {
		patterns_dir => ["/etc/logstash/patterns"]
		match => { "oubase" => "%{OU:ou}com\/%{GREEDYDATA:suser}" }
		tag_on_failure => [ "unparsed" ]
### Remove redundant field names
		remove_field => ["oubase"]
	}
### In Case user is not present, this grok will consume the information
	if "unparsed" in [tags] {
		grok {
			patterns_dir => ["/etc/logstash/patterns"]
			match => { "message" => "%{SYSLOGTIMESTAMP:timestamp} %{IP:srcip} %{PROXYBASE:base} %{GREEDYDATA:msg}" }
			add_tag => ["User_Absent"]
			remove_tag => ["unparsed", "getproxy"]
			tag_on_failure => ["unparsed"]
		}
	}
### Create kv pairing for logs
	if "unparsed" not in [tags] {
		kv {
			source => "msg"
			value_split => "="
			transform_key => "lowercase"
			transform_value => "lowercase"
			target => "msg"
		}
		kv {
			source => "base"
			value_split => "="
			transform_key => "lowercase"
			transform_value => "lowercase"
			exclude_keys => [ "product", "product_version", "user", "vendor" ]
			target => "base"
		}
### Mutate the fields to get only the required fields
### Add nested object for user and ip
		mutate {
			rename =>  { "suser" => "[user][source]" }
			rename =>  {"[msg][src_host]" => "[ip][source]"}
			rename =>  {"srcip" => "[ip][device]"}
			rename =>  {"[msg][dst_ip]" => "[ip][destination]"}
		}
	}
	date {
		match => [ "timestamp", "MMM dd HH:mm:ss" ]
	}
}
}

output {
if "proxy" in [type] {
    stdout {
    	codec => "rubydebug"
    }
    elasticsearch {
	    action => "index"
#		document_id => "%{[@metadata][document_id]}"
    	hosts => ["http://localhost:9200"]
    	index => "ueba"
    }
}
}
